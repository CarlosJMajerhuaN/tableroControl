<?php

namespace IndicadorBundle\Repository;

/**
 * consultaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class consultaRepository extends \Doctrine\ORM\EntityRepository
{
    
    public function IndicadoresbyArea($cod_area) {
        $sql = "SELECT  * 
        FROM    tablero_control AS t1
        WHERE   t1.cod_area = $cod_area; ";
        $stmt = $this->getEntityManager()->getConnection()->prepare($sql);
        $stmt->execute();
        $datos = $stmt->fetchAll();      
        return $datos;
    }
    public function DataMesbyCodigo($codigo,$campo){
        $sql = "SELECT $campo as valor FROM [PRUEBAFALEN].[dbo].[tablero_control] WHERE cod_tablero='$codigo'";
        $stmt = $this->getEntityManager()->getConnection()->prepare($sql);
        $stmt->execute();
        $datos = $stmt->fetch();      
        return $datos;
    }
    
    public function GuardarValor($codigo,$campo,$valor){
        $sql = "EXEC  SP_TABLA_CONTROL_REGISTRAR_VALOR $codigo,$campo,'$valor'";
//        var_dump($sql);
        $stmt = $this->getEntityManager()->getConnection()->prepare($sql);
        $stmt->execute();
        $datos = $stmt->fetch();      
        return $datos;
    } 
     public function Comboareas(){
        $sql = "SELECT [id] AS codigo
                    ,[nombre] AS nombre
                FROM [PRUEBAFALEN].[dbo].[area_ipd]  ORDER BY nombre desc";
        $stmt = $this->getEntityManager()->getConnection()->prepare($sql);
        $stmt->execute();
        $datos = $stmt->fetchAll();
        $array = array();
       
        foreach ($datos as $dato) {
            $array[$dato['codigo']] = $dato['nombre'];
        }
        return $array;
    }
    

    public function datagrafico($codtablero){
        $sql = "SELECT 
	   [cod_tablero]
          ,[cod_area]
          ,[tab_count]
          ,[tab_col]
          ,[tab_padre]
          ,[tab_pertenece]
          ,[tab_descripcion]
          ,[tab_punt_min]
          ,[tab_punt_med]
          ,[tab_punt_max]
          ,[tab_aÃ±o]
          ,ISNULL([tab_ene],0) AS tab_ene
          ,ISNULL([tab_feb],0) AS tab_feb
          ,ISNULL([tab_mar],0) AS tab_mar
          ,ISNULL([tab_abr],0) AS tab_abr
          ,ISNULL([tab_may],0) AS tab_may
          ,ISNULL([tab_jun],0) AS tab_jun
          ,ISNULL([tab_jul],0) AS tab_jul
          ,ISNULL([tab_ago],0) AS tab_ago
          ,ISNULL([tab_sep],0) AS tab_sep
          ,ISNULL([tab_oct],0) AS tab_oct
          ,ISNULL([tab_nov],0) AS tab_nov
          ,ISNULL([tab_dic],0) AS tab_dic
          ,[tab_tipo]
          ,[tab_formula]
            FROM [PRUEBAFALEN].[dbo].[tablero_control] WHERE cod_tablero='$codtablero'";
//        var_dump($sql);exit;
        $stmt = $this->getEntityManager()->getConnection()->prepare($sql);
        $stmt->execute();
        $datos = $stmt->fetch();      
        return $datos;
    }
    
    
    public function MesActualbyRango($year){
        $sql = "SELECT  perm_mes as mes
                FROM    [PRUEBAFALEN].[dbo].[permiso]
                WHERE   GETDATE() BETWEEN perm_fec_ini AND perm_fec_fin
                        AND perm_ano = $year;";
        $stmt = $this->getEntityManager()->getConnection()->prepare($sql);
        $stmt->execute();
        $datos = $stmt->fetch();      
        return $datos;
    }
}
